REQ0 - Fast prototype:
    REQ0.1 detect pressed buttons
    REQ0.2 toggle relays on pressed button
    REQ0.3 prepare standard hardware layout


Functional requirements:

REQF4 Various Events type shall be handled
    REQF2 --> Button events
    REQF3 --> Timeout events
REQF5 Event triggered acions shall be supported
    REQF5.1 gpio controll actions
    REQF5.1 timer controll actions

REQF2 Button events
    REQF2.1 detect buton press
    REQF2.2 detect button release
    REQF2.3 detect shortpress < 1s
    REQF2.4 detect longress >= 1s
    REQF2.5 detect super-longress > 2s
    REQF2.6 ------
    REQF2.7 debouncing

    REQF1 Gpio configurations
    REQF1.1 alows config input/output
    REQF1.2 handle inverted hardware logic
    REQF1.3 handle output init state
    REQF1.3 allows pullUp config

REQF3 Timer events
    REQF3.1 start one time timer
    REQF3.2 start periodic timer
    REQF3.3 1ms resolution



Development requirements:
REQD1 Requirements
    REQD1.1 Requirement driven development

REQD2 Code Architecture
    REQD2.1 Code Architecture must follow Requirements
    REQD2.3 Code Architecture must support various projects

REQD3 Code Design
    REQD3.1 Code design must follow Code Architecture
    REQD3.2 Unit configuration must be separated from implementation

REQD3 Source Code
    REQD3.1 Source Code must follow Code Design
    REQD3.2 Source Code must be documented

REQD4 Code Documentation
    REQD4.1 use Doxygen
    REQD4.2 each API element shall have a description
            (exception: self explanatory elements)
    REQD4.3 git commits shall fit into following template: "type(scope): description"
        as type: feat[ure], fix, docs, chore, refactor, tests, perf, styles, ci, build, revert

